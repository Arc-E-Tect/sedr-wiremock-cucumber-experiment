/*
 * Copyright (c) 2024.
 *
 * MIT License
 *
 * Â© 2024 Iwan Eising - Arc-E-Tect
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

/*
 * This is the build-file for the WireMock Cucumber experiment.
 */
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    alias libs.plugins.io.freefair.lombok

    alias libs.plugins.io.spring.dependency.management
    alias libs.plugins.org.springframework.boot
}

// set the version of junit-jupiter to the version defined in
// the libs.versions.toml file explicitly
ext['junit-jupiter.version'] = libs.versions.junit.jupiter.get()

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

version = project.version

dependencies {
    testImplementation libs.bundles.junit
    testImplementation libs.bundles.cucumber
    testImplementation libs.bundles.logging

    implementation libs.bundles.spring.boot

    compileOnly libs.jakarta.servlet.api

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.arc_e_tect.experiments.App'
}

testing {
    suites {
        test {
            useJUnitJupiter()
        }

        bddTest(JvmTestSuite) {
            dependencies {
                implementation project()
            }

            sources {
                java {
                    srcDirs = ['src/bdd-test/java']
                }
                resources {
                    srcDirs = ['src/bdd-test/resources']
                }
            }

            targets {
                configureEach {
                    testTask.configure {
                        shouldRunAfter(test)
                    }
                }
            }
        }

    }
}

configurations {
    bddTestImplementation.extendsFrom testImplementation
}

tasks.named('check') {
    dependsOn(testing.suites.bddTest)
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    systemProperty("cucumber.junit-platform.naming-strategy", "long")

    testLogging {
        events "passed", "skipped", "failed"
    }
    testLogging.showStandardStreams = true
    reports {
        junitXml.required = true
        html.required = true
    }
}


bootJar {
    mainClass  = 'com.arc_e_tect.experiments.App'
}

springBoot {
    buildInfo {
        properties {
            name = "WCE: Wiremock Cucumber Experiment"
            additional = [
                    by: System.properties['user.name'],
                    continuousIntegration: System.getenv('CI') ? true: false,
            ]
        }
    }
}

// ------------------------------------------------------------
// WireMock

dependencies {
    testImplementation libs.wiremock.spring.boot
}